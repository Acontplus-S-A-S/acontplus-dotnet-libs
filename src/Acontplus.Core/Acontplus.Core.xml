<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Acontplus.Core</name>
    </assembly>
    <members>
        <member name="T:Acontplus.Core.Domain.Common.Results.DomainErrors">
            <summary>
            Represents multiple domain errors that can occur during validation or complex operations.
            </summary>
            <param name="Errors">Collection of individual domain errors.</param>
        </member>
        <member name="M:Acontplus.Core.Domain.Common.Results.DomainErrors.#ctor(System.Collections.Generic.IReadOnlyList{Acontplus.Core.Domain.Common.Results.DomainError})">
            <summary>
            Represents multiple domain errors that can occur during validation or complex operations.
            </summary>
            <param name="Errors">Collection of individual domain errors.</param>
        </member>
        <member name="P:Acontplus.Core.Domain.Common.Results.DomainErrors.Errors">
            <summary>Collection of individual domain errors.</summary>
        </member>
        <member name="T:Acontplus.Core.Domain.Common.Results.DomainWarnings">
            <summary>
            Represents warnings that don't prevent operation success but should be communicated.
            </summary>
            <param name="Warnings">Collection of individual warnings.</param>
        </member>
        <member name="M:Acontplus.Core.Domain.Common.Results.DomainWarnings.#ctor(System.Collections.Generic.IReadOnlyList{Acontplus.Core.Domain.Common.Results.DomainError})">
            <summary>
            Represents warnings that don't prevent operation success but should be communicated.
            </summary>
            <param name="Warnings">Collection of individual warnings.</param>
        </member>
        <member name="P:Acontplus.Core.Domain.Common.Results.DomainWarnings.Warnings">
            <summary>Collection of individual warnings.</summary>
        </member>
        <member name="T:Acontplus.Core.Domain.Common.Results.SuccessWithWarnings`1">
            <summary>
            Represents a successful result that may also contain warnings.
            </summary>
            <param name="Value">The success value.</param>
            <param name="Warnings">Optional warnings that occurred during the operation.</param>
        </member>
        <member name="M:Acontplus.Core.Domain.Common.Results.SuccessWithWarnings`1.#ctor(`0,System.Nullable{Acontplus.Core.Domain.Common.Results.DomainWarnings})">
            <summary>
            Represents a successful result that may also contain warnings.
            </summary>
            <param name="Value">The success value.</param>
            <param name="Warnings">Optional warnings that occurred during the operation.</param>
        </member>
        <member name="P:Acontplus.Core.Domain.Common.Results.SuccessWithWarnings`1.Value">
            <summary>The success value.</summary>
        </member>
        <member name="P:Acontplus.Core.Domain.Common.Results.SuccessWithWarnings`1.Warnings">
            <summary>Optional warnings that occurred during the operation.</summary>
        </member>
        <member name="M:Acontplus.Core.DTOs.Requests.PaginationDto.BuildFilters">
            <summary>
            Builds a dictionary of filters if they exist, otherwise returns null.
            Useful for converting to stored procedure parameters or other filter formats.
            </summary>
            <returns>Dictionary of filters or null if no filters exist</returns>
        </member>
        <member name="M:Acontplus.Core.DTOs.Requests.PaginationDto.BuildFiltersWithPrefix(System.String)">
            <summary>
            Builds a dictionary of filters with custom key prefix (e.g., "@" for SQL parameters).
            </summary>
            <param name="prefix">Prefix to add to filter keys</param>
            <returns>Dictionary of filters with prefixed keys or null if no filters exist</returns>
        </member>
        <member name="M:Acontplus.Core.DTOs.Requests.PaginationDto.BuildSqlParameters">
            <summary>
            Builds a dictionary of filters with "@" prefix for SQL parameters.
            </summary>
            <returns>Dictionary of filters with "@" prefix or null if no filters exist</returns>
        </member>
        <member name="M:Acontplus.Core.Extensions.JsonExtensions.DeserializeOptimized``1(System.String)">
            <summary>
            Deserializes JSON string to the specified type using optimized options.
            </summary>
            <typeparam name="T">The target type to deserialize to.</typeparam>
            <param name="json">The JSON string to deserialize.</param>
            <returns>The deserialized object.</returns>
            <exception cref="T:System.ArgumentException">Thrown when JSON string is null or empty.</exception>
            <exception cref="T:System.Text.Json.JsonException">Thrown when deserialization fails.</exception>
        </member>
        <member name="M:Acontplus.Core.Extensions.JsonExtensions.DeserializeSafe``1(System.String,``0)">
            <summary>
            Deserializes JSON string to the specified type with fallback value on failure.
            </summary>
            <typeparam name="T">The target type to deserialize to.</typeparam>
            <param name="json">The JSON string to deserialize.</param>
            <param name="fallback">The fallback value to return if deserialization fails.</param>
            <returns>The deserialized object or fallback value.</returns>
        </member>
        <member name="M:Acontplus.Core.Extensions.JsonExtensions.SerializeOptimized``1(``0,System.Boolean)">
            <summary>
            Serializes object to JSON string using optimized options.
            </summary>
            <typeparam name="T">The type of object to serialize.</typeparam>
            <param name="obj">The object to serialize.</param>
            <param name="pretty">Whether to format the JSON with indentation.</param>
            <returns>The JSON string representation of the object.</returns>
        </member>
        <member name="M:Acontplus.Core.Extensions.JsonExtensions.CloneDeep``1(``0)">
            <summary>
            Creates a deep clone of an object via JSON serialization and deserialization.
            </summary>
            <typeparam name="T">The type of object to clone.</typeparam>
            <param name="obj">The object to clone.</param>
            <returns>A deep clone of the object.</returns>
        </member>
        <member name="T:Acontplus.Core.Extensions.RepositoryAuditExtensions">
            <summary>
            Extension methods for audit functionality on repositories with BaseEntity types.
            </summary>
        </member>
        <member name="M:Acontplus.Core.Extensions.RepositoryAuditExtensions.SoftDeleteAsync``1(Acontplus.Core.Abstractions.Persistence.IRepository{``0},``0,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Soft deletes an entity by marking it as deleted.
            </summary>
        </member>
        <member name="M:Acontplus.Core.Extensions.RepositoryAuditExtensions.RestoreAsync``1(Acontplus.Core.Abstractions.Persistence.IRepository{``0},``0,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Restores a soft-deleted entity.
            </summary>
        </member>
        <member name="M:Acontplus.Core.Extensions.RepositoryAuditExtensions.SoftDeleteByIdAsync``1(Acontplus.Core.Abstractions.Persistence.IRepository{``0},System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Soft deletes an entity by ID.
            </summary>
        </member>
        <member name="M:Acontplus.Core.Extensions.RepositoryAuditExtensions.SoftDeleteRangeAsync``1(Acontplus.Core.Abstractions.Persistence.IRepository{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Soft deletes multiple entities matching a predicate.
            </summary>
        </member>
        <member name="M:Acontplus.Core.Validation.XmlValidator.Validate(System.Xml.XmlDocument,System.IO.Stream)">
            <summary>
                Validates the provided XmlDocument against an XSD schema file.
            </summary>
            <param name="xmlDocument">The XML document to validate.</param>
            <param name="xsdFilePath">The path to the XSD file.</param>
            <returns>A list of ValidationError objects containing error details.</returns>
        </member>
        <member name="M:Acontplus.Core.Validation.XmlValidator.ExportErrorsToJson(System.Collections.Generic.List{Acontplus.Core.Validation.ValidationError},System.String)">
            <summary>
                Exports validation errors to a JSON file.
            </summary>
            <param name="errors">List of validation errors.</param>
            <param name="outputFilePath">The path to save the JSON file.</param>
        </member>
        <member name="M:Acontplus.Core.Validation.XmlValidator.CleanXmlForSqlServer(System.String)">
            <summary>
            Limpia un XML para hacerlo compatible con SQL Server
            </summary>
        </member>
        <member name="M:Acontplus.Core.Validation.XmlValidator.CleanHtmlTags(System.String)">
            <summary>
            Limpia etiquetas HTML que pueden estar mezcladas con XML
            </summary>
        </member>
        <member name="M:Acontplus.Core.Validation.XmlValidator.ConvertHtmlEntitiesToXml(System.String)">
            <summary>
            Convierte entidades HTML a sus equivalentes XML v√°lidos
            </summary>
        </member>
        <member name="M:Acontplus.Core.Validation.XmlValidator.RemoveOrConvertHtmlTags(System.String)">
            <summary>
            Elimina o convierte etiquetas HTML problem√°ticas
            </summary>
        </member>
        <member name="M:Acontplus.Core.Validation.XmlValidator.CleanHtmlAttributes(System.String)">
            <summary>
            Limpia atributos HTML que pueden no ser v√°lidos en XML
            </summary>
        </member>
        <member name="M:Acontplus.Core.Validation.XmlValidator.EscapeUnescapedAmpersands(System.String)">
            <summary>
            Escapa los ampersands y que no sean parte de entidades XML v√°lidas
            </summary>
        </member>
        <member name="M:Acontplus.Core.Validation.XmlValidator.RemoveBomChars(System.String)">
            <summary>
            Elimina caracteres BOM (Byte Order Mark) que pueden causar problemas de codificaci√≥n
            </summary>
        </member>
        <member name="M:Acontplus.Core.Validation.XmlValidator.NormalizeLineBreaks(System.String)">
            <summary>
            Normaliza los saltos de l√≠nea para evitar problemas con diferentes sistemas operativos
            </summary>
        </member>
        <member name="M:Acontplus.Core.Validation.XmlValidator.RemoveInvalidXmlChars(System.String)">
            <summary>
            Elimina caracteres que no son v√°lidos en XML seg√∫n la especificaci√≥n
            </summary>
        </member>
        <member name="M:Acontplus.Core.Validation.XmlValidator.RemoveXmlDeclaration(System.String)">
            <summary>
            M√©todo original para eliminar declaraci√≥n XML
            </summary>
        </member>
        <member name="M:Acontplus.Core.Validation.XmlValidator.AggressiveHtmlClean(System.String)">
            <summary>
            M√©todo alternativo m√°s agresivo para casos extremos donde hay mucho HTML mezclado
            </summary>
        </member>
    </members>
</doc>
